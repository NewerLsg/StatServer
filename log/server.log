Sat, 30 Jan 2016 20:56:00 main.py[line:57] DEBUG Start server.
Sat, 30 Jan 2016 20:56:16 main.py[line:57] DEBUG Start server.
Sat, 30 Jan 2016 20:57:48 main.py[line:57] DEBUG Start server.
Sat, 30 Jan 2016 20:58:19 main.py[line:57] DEBUG Start server.
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:173] DEBUG valid name.
Sat, 30 Jan 2016 20:58:32 sock.py[line:31] DEBUG resp [ST01], len[5](blank included)
Sat, 30 Jan 2016 20:58:32 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:173] DEBUG valid name.
Sat, 30 Jan 2016 20:58:32 sock.py[line:31] DEBUG resp [ST01], len[5](blank included)
Sat, 30 Jan 2016 20:58:32 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:32 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:32 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:32 communicationobjs.py[line:88] DEBUG ID[001] added to team [HD].
Sat, 30 Jan 2016 20:58:32 communicationobjs.py[line:88] DEBUG ID[002] added to team [HD].
Sat, 30 Jan 2016 20:58:32 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:32 communicationobjs.py[line:88] DEBUG ID[003] added to team [LD].
Sat, 30 Jan 2016 20:58:32 communicationobjs.py[line:88] DEBUG ID[004] added to team [LD].
Sat, 30 Jan 2016 20:58:32 communicationobjs.py[line:88] DEBUG ID[005] added to team [LD].
Sat, 30 Jan 2016 20:58:32 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:98] DEBUG first door open
Sat, 30 Jan 2016 20:58:32 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:32 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:32 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:32 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:32 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:32 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:32 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:32 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:32 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:32 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:32 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:32 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:32 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:32 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:32 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:32 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:32 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:32 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:32 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:32 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:32 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:33 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:33 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:33 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:33 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:33 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:33 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:33 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:33 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:58:34 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:58:34 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25150>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D25170>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:58:34 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02D250F0>] score.
Sat, 30 Jan 2016 20:58:34 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:58:34 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:58:34 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:58:34 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:58:34 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:40 main.py[line:57] DEBUG Start server.
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:173] DEBUG valid name.
Sat, 30 Jan 2016 20:59:46 sock.py[line:31] DEBUG resp [ST01], len[5](blank included)
Sat, 30 Jan 2016 20:59:46 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:173] DEBUG valid name.
Sat, 30 Jan 2016 20:59:46 sock.py[line:31] DEBUG resp [ST01], len[5](blank included)
Sat, 30 Jan 2016 20:59:46 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:46 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:46 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:46 communicationobjs.py[line:88] DEBUG ID[001] added to team [HD].
Sat, 30 Jan 2016 20:59:46 communicationobjs.py[line:88] DEBUG ID[002] added to team [HD].
Sat, 30 Jan 2016 20:59:46 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:46 communicationobjs.py[line:88] DEBUG ID[003] added to team [LD].
Sat, 30 Jan 2016 20:59:46 communicationobjs.py[line:88] DEBUG ID[004] added to team [LD].
Sat, 30 Jan 2016 20:59:46 communicationobjs.py[line:88] DEBUG ID[005] added to team [LD].
Sat, 30 Jan 2016 20:59:46 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:98] DEBUG first door open
Sat, 30 Jan 2016 20:59:46 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:46 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:46 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:46 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:46 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:46 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:46 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:46 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:46 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:46 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:46 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:46 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:46 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:46 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:46 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:46 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:46 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:46 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:46 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:46 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:46 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:47 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:47 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:47 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:47 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:47 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:47 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:47 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:47 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:48 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:48 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:48 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:48 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:48 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:48 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:48 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:48 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:48 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:48 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:48 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:48 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:48 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:48 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:48 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:48 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:48 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:48 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:48 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:48 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:48 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:48 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:48 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:48 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:48 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:48 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:48 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:48 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:48 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:52 sock.py[line:25] DEBUG req:[MS000102],len[8]
Sat, 30 Jan 2016 20:59:52 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:52 protocol.py[line:227] DEBUG target init.
Sat, 30 Jan 2016 20:59:52 protocol.py[line:229] DEBUG content[0102],len[4]
Sat, 30 Jan 2016 20:59:52 protocol.py[line:247] DEBUG target[01] in team[2] init succ.
Sat, 30 Jan 2016 20:59:52 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:57 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:57 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:57 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:57 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:57 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:57 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:141] DEBUG [01] light up
Sat, 30 Jan 2016 20:59:57 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:57 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:57 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:57 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:57 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:57 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:57 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:57 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:57 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:141] DEBUG [01] light up
Sat, 30 Jan 2016 20:59:57 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:57 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:57 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:57 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:57 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:141] DEBUG [01] light up
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:141] DEBUG [01] light up
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:141] DEBUG [01] light up
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 20:59:59 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 20:59:59 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 20:59:59 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 20:59:59 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:141] DEBUG [01] light up
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 20:59:59 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 20:59:59 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 20:59:59 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 20:59:59 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 21:00:00 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 21:00:00 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 21:00:00 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 21:00:00 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 21:00:00 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 21:00:00 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:141] DEBUG [01] light up
Sat, 30 Jan 2016 21:00:00 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS00LD],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS00HD],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:162] DEBUG regist name.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:166] DEBUG invalid name.
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [ST00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS0102001002HD],len[14]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:181] DEBUG send member IDs, num[2]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:199] DEBUG namelist:[001002], teamname:[HD]
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[TS0103003004005LD],len[17]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:181] DEBUG send member IDs, num[3]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:199] DEBUG namelist:[003004005], teamname:[LD]
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0001],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:84] DEBUG [1] request open authority.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0002],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:84] DEBUG [2] request open authority.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:109] DEBUG condition not matched
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [SD00], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0003],len[6]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:84] DEBUG [3] request open authority.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:94] DEBUG prefix condition matched.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:106] DEBUG score matched
Sat, 30 Jan 2016 21:00:00 sock.py[line:31] DEBUG resp [SD01], len[5](blank included)
Sat, 30 Jan 2016 21:00:00 sock.py[line:37] DEBUG resp sended,len[5]
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[MS01001],len[7]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 21:00:00 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5150>] score.
Sat, 30 Jan 2016 21:00:00 communicationobjs.py[line:63] DEBUG ID:[001] get [10] score!
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[MS01002],len[7]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 21:00:00 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA5170>] score.
Sat, 30 Jan 2016 21:00:00 communicationobjs.py[line:63] DEBUG ID:[002] get [10] score!
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[MS01003],len[7]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:220] DEBUG msg from MS
Sat, 30 Jan 2016 21:00:00 protocol.py[line:255] DEBUG target shooted.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:259] DEBUG update MID[<communicationObjs.Member object at 0x02AA50F0>] score.
Sat, 30 Jan 2016 21:00:00 communicationobjs.py[line:63] DEBUG ID:[003] get [10] score!
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0100101],len[9]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:125] DEBUG door open, door id[1], mem id[001]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0100202],len[9]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:125] DEBUG door open, door id[2], mem id[002]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:136] DEBUG get team, team members[2], [10] targets will be light up.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:141] DEBUG [01] light up
Sat, 30 Jan 2016 21:00:00 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:00 sock.py[line:25] DEBUG req:[DS0100301],len[9]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:125] DEBUG door open, door id[1], mem id[003]
Sat, 30 Jan 2016 21:00:00 protocol.py[line:136] DEBUG get team, team members[3], [15] targets will be light up.
Sat, 30 Jan 2016 21:00:00 protocol.py[line:150] DEBUG not enough targets.
Sat, 30 Jan 2016 21:00:00 sock.py[line:40] DEBUG no need to resp.
Sat, 30 Jan 2016 21:00:02 communicationobjs.py[line:44] DEBUG target[01] del from door[3].
